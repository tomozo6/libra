openapi: 3.0.3
info:
  title: Libra API
  description: |-
    あいうえお
  termsOfService: http://swagger.io/terms/
  contact:
    email: liebestraum.tomo@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://libra.tomozo6.com/api/
tags:
  - name: pay
    description: Everything about your paies
paths:
  /pay/records:
    post:
      tags:
        - pay
      summary: 支払い明細登録
      description: 支払い明細を登録します。
      operationId: pay
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pay'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayRes'
        '405':
          description: Invalid input
    get:
      tags:
        - pay
      summary: 支払い明細取得(全情報)
      description: 全ての支払い明細をリストで取得します。
      operationId: payRecords
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayRecords'
        '400':
          description: Invalid status value
  /pay/records/{payer}:
    get:
      tags:
        - pay
      summary: 支払い明細取得(支払者)
      description: 指定されたPayerの支払い明細をリストで取得します。
      operationId: getPayRecordsByPayer
      parameters:
        - name: payer
          in: path
          description: Payer Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayRecords'
        '400':
          description: Invalid status value
  /pay/amounts/{payer}:
    get:
      tags:
        - pay
      summary: 支払総額取得
      description: 指定されたPayerの支払い総額を取得します。
      operationId: getPayAmountsByPayer
      parameters:
        - name: payer
          in: path
          description: Payer Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayAmounts'
        '400':
          description: Invalid status value
components:
  schemas:
    Pay:
      required:
        - user
        - amounts
      type: object
      properties:
        Payer:
          type: string
          example: tomozo
        Amounts:
          type: integer
          format: int64
          example: 1200
        Memo:
          type: string
          example: ハナマサ
    PayRes:
      type: object
      properties:
        Payer:
          type: string
          example: tomozo
        InputDate:
          type: string
          example: '2022-08-10 19:08:28.483283+09:00'
        Amounts:
          type: integer
          minimum: 1
          example: 1200
        Memo:
          type: string
          example: ハナマサ
    PayRecords:
      type: object
      properties:
        Count:
          type: integer
          format: int32
          example: 4
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PayRes'
    PayAmount:
      type: object
      properties:
        Payer:
          type: string
          example: tomozo
        Amounts:
          type: integer
          minimum: 1
          example: 1200
