name: Backend CI
on:
  pull_request:
    branches:
      - main

jobs:
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::518773205675:role/libra-base-githubactions-role
          aws-region: ap-northeast-1

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        working-directory: backend/libra-api
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Lint with flake8
        id: lint
        working-directory: backend/libra-api
        continue-on-error: true
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero „ÅØ„Åô„Åπ„Å¶„ÅÆ„Ç®„É©„Éº„ÇíË≠¶Âëä„Å®„Åó„Å¶Êâ±„ÅÜ„ÄÇ GitHub „Ç®„Éá„Ç£„Çø„ÅÆÂπÖ„ÅØ 127 ÊñáÂ≠ó
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        id: test
        working-directory: backend/libra-api/tests
        continue-on-error: true
        run: |
          pipenv run pytest -s -v --cov

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          LINT: "flake8\n${{ steps.lint.outputs.stdout }}"
          TEST: "pytest\n${{ steps.test.outputs.stdout }}"
        with:
          script: |
            const output = `## \`backend/libra-api\`
            #### Python Format and Style üñå\`${{ steps.lint.outcome }}\`
            #### Python Test ‚öôÔ∏è\`${{ steps.test.outcome }}\`

            <details><summary>Show Result</summary>

            \`\`\`\n
            ${process.env.LINT}
            \`\`\`

            \`\`\`\n
            ${process.env.TEST}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })