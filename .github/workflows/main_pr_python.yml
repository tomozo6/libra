name: Backend Python Test
on:
  pull_request:
    branches:
      - main
    paths:
      - 'backend/libra-api/**'

jobs:
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::518773205675:role/libra-base-githubactions-role
          aws-region: ap-northeast-1

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          architecture: "x64"
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        working-directory: backend/libra-api
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      # Ëá¥ÂëΩÁöÑ„Å™„Ç®„É©„Éº„ÄÇworkflow„ÇíÊ≠¢„ÇÅ„Åæ„Åô„ÄÇ
      - name: Lint with flake8(Error)
        id: linterr
        working-directory: backend/libra-api
        run: |
          stdout=$(pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics)
          echo ${stdout}
          stdout="${stdout//$'\n'/'%0A'}"
          echo "::set-output name=stdout::${stdout}"

      # Ë≠¶Âëä„ÄÇworkflow„ÅØÊ≠¢„ÇÅ„Åæ„Åõ„Çì„ÄÇ(GitHub „Ç®„Éá„Ç£„Çø„ÅÆÂπÖ„ÅØ 127 ÊñáÂ≠ó)
      - name: Lint with flake8(Warning)
        id: lintwar
        working-directory: backend/libra-api
        continue-on-error: true
        #run: pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        run: |
          stdout=$(pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics)
          echo ${stdout}
          stdout="${stdout//$'\n'/'%0A'}"
          echo "::set-output name=stdout::${stdout}"

      - name: Test with pytest
        id: test
        working-directory: backend/libra-api/tests
        continue-on-error: true
        run: |
          stdout=$(pipenv run pytest -s -v --cov)
          echo ${stdout}
          stdout="${stdout//$'\n'/'%0A'}"
          echo "::set-output name=stdout::${stdout}"

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          LINTERR: "flake8-Error\n${{ steps.linterr.outputs.stdout }}"
          LINTWAR: "flake8-Warning\n${{ steps.lintwar.outputs.stdout }}"
          TEST: "pytest\n${{ steps.test.outputs.stdout }}"
        with:
          script: |
            const output = `## \`backend/libra-api\`
            #### Python Lint Error üñå\`${{ steps.linterr.outcome }}\`
            #### Python Lint Warning üñå\`${{ steps.lintwar.outcome }}\`
            #### Python Test ‚öôÔ∏è\`${{ steps.test.outcome }}\`

            <details><summary>Show Result</summary>

            \`\`\`\n
            ${process.env.LINTERR}
            ${process.env.LINTWAR}
            \`\`\`

            \`\`\`\n
            ${process.env.TEST}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
